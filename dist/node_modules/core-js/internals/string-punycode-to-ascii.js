'use strict';const _ref={exports:{}};(function(module,exports){var maxInt=2147483647,base=36,tMin=1,tMax=26,skew=38,damp=700,initialBias=72,initialN=128,delimiter="-",regexNonASCII=/[^\0-\u007E]/,regexSeparators=/[.\u3002\uFF0E\uFF61]/g,OVERFLOW_ERROR="Overflow: input needs wider integers to process",baseMinusTMin=base-tMin,floor=Math.floor,stringFromCharCode=String.fromCharCode,ucs2decode=function ucs2decode(string){for(var output=[],counter=0,length=string.length;counter<length;){var value=string.charCodeAt(counter++);if(55296<=value&&56319>=value&&counter<length){var extra=string.charCodeAt(counter++);56320==(64512&extra)?output.push(((1023&value)<<10)+(1023&extra)+65536):(output.push(value),counter--)}else output.push(value)}return output},digitToBasic=function digitToBasic(digit){return digit+22+75*(26>digit)},adapt=function adapt(delta,numPoints,firstTime){var k=0;for(delta=firstTime?floor(delta/damp):delta>>1,delta+=floor(delta/numPoints);delta>baseMinusTMin*tMax>>1;k+=base)delta=floor(delta/baseMinusTMin);return floor(k+(baseMinusTMin+1)*delta/(delta+skew))},encode=function encode(input){var output=[];input=ucs2decode(input);var i,currentValue,inputLength=input.length,n=initialN,delta=0,bias=initialBias;for(i=0;i<input.length;i++)currentValue=input[i],128>currentValue&&output.push(stringFromCharCode(currentValue));var basicLength=output.length,handledCPCount=basicLength;for(basicLength&&output.push(delimiter);handledCPCount<inputLength;){var m=maxInt;for(i=0;i<input.length;i++)currentValue=input[i],currentValue>=n&&currentValue<m&&(m=currentValue);var handledCPCountPlusOne=handledCPCount+1;if(m-n>floor((maxInt-delta)/handledCPCountPlusOne))throw RangeError(OVERFLOW_ERROR);for(delta+=(m-n)*handledCPCountPlusOne,n=m,i=0;i<input.length;i++){if(currentValue=input[i],currentValue<n&&++delta>maxInt)throw RangeError(OVERFLOW_ERROR);if(currentValue==n){for(var t,q=delta,k=base;;k+=base){if(t=k<=bias?tMin:k>=bias+tMax?tMax:k-bias,q<t)break;var qMinusT=q-t,baseMinusT=base-t;output.push(stringFromCharCode(digitToBasic(t+qMinusT%baseMinusT))),q=floor(qMinusT/baseMinusT)}output.push(stringFromCharCode(digitToBasic(q))),bias=adapt(delta,handledCPCountPlusOne,handledCPCount==basicLength),delta=0,++handledCPCount}}++delta,++n}return output.join("")};module.exports=function(input){var i,label,encoded=[],labels=input.toLowerCase().replace(regexSeparators,".").split(".");for(i=0;i<labels.length;i++)label=labels[i],encoded.push(regexNonASCII.test(label)?"xn--"+encode(label):label);return encoded.join(".")}})(_ref,_ref.exports);export default _ref.exports;