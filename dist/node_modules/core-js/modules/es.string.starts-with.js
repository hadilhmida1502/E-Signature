'use strict';import $ from"/node_modules/core-js/internals/export.js";import _ref2 from"/node_modules/core-js/internals/object-get-own-property-descriptor.js";import toLength from"/node_modules/core-js/internals/to-length.js";import notARegExp from"/node_modules/core-js/internals/not-a-regexp.js";import requireObjectCoercible from"/node_modules/core-js/internals/require-object-coercible.js";import correctIsRegExpLogic from"/node_modules/core-js/internals/correct-is-regexp-logic.js";import IS_PURE from"/node_modules/core-js/internals/is-pure.js";const _ref={exports:{}};(function(module,exports){var getOwnPropertyDescriptor=_ref2.f,nativeStartsWith="".startsWith,min=Math.min,CORRECT_IS_REGEXP_LOGIC=correctIsRegExpLogic("startsWith"),MDN_POLYFILL_BUG=!IS_PURE&&!CORRECT_IS_REGEXP_LOGIC&&!!function(){var descriptor=getOwnPropertyDescriptor(String.prototype,"startsWith");return descriptor&&!descriptor.writable}();$({target:"String",proto:!0,forced:!MDN_POLYFILL_BUG&&!CORRECT_IS_REGEXP_LOGIC},{startsWith:function startsWith(searchString){var that=String(requireObjectCoercible(this));notARegExp(searchString);var index=toLength(min(1<arguments.length?arguments[1]:void 0,that.length)),search=String(searchString);return nativeStartsWith?nativeStartsWith.call(that,search,index):that.slice(index,index+search.length)===search}})})(_ref,_ref.exports);export default _ref.exports;